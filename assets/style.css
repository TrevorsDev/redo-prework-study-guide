* {
    margin: 0;
    padding: 0;
}


/*Id like to add flexbox to everything and try to understand how it works/how it would help organize and simplify my styling the best. But first Ill focus on finishing the section in the prework*/
/*header,
footer {
    background-color: #41b3a3;
    color: #e6e6e6;
    font-family: 'Open Sans', sans-serif;
    font-family: 'Raleway', sans-serif;
    font-size: 100%;*/



h1 {
    font-size: 40px;
}

h1,
h2,
h3 {
    font-family: 'Raleway', sans-serif;
}

h2 {
    margin: 10px auto;
    font-size: 20px;
}

h3 {
    font-size: 17px;
}

body {
    font-family: 'Open Sans', sans-serif;
    font-family: 'Roboto', sans-serif;
    background-color: #85dcb8;
}

img {
    display: block;
    height: 50px;
    width: 50px;
    margin-left: auto;
    margin-right: auto;
}

ul {
    font-size: 15px;
    line-height: 1.3;
    text-align: left;

}

p {
    font-size: 15px;
    font-weight: bold;
}

.parentContainer {
    /*Restructured classes to help manage flex positioning in the best way possible. started with the parent container adding - 
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content:center;
    
    - and nothing worked as expected. How to know when to use flex, grid, or basic positioning strategies like the 'position' property
    is grid a better use case here?*/
}

.topChildContainer,
.bottomChildContainer {
    /*attempted to create display flex with containers but struggled understanding how to make them work.
    want to go over it in office hours
    display: flex;
    flex-direction: column;
    align-items: center;*/
    background-color: #41b3a3;
    color: #e6e6e6;
    font-family: 'Open Sans', sans-serif;
    font-family: 'Raleway', sans-serif;
    font-size: 100%;
    border-radius: 5px;

}

.secondChildContainer {}

.cat {
    border-radius: 10px;
}

.card {
    border: 5px solid #279f8f;
    box-shadow: 5px 10px #41b3a3;
    border-radius: 10px;
    color: #e6e6e6;
    background-color: #c38d9e;
}

.string {}